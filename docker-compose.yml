version: '3.8'

services:
  # .NET Web API
  olloapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: olloapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/Logs
      - ./appsettings.Production.json:/app/appsettings.Production.json:ro
    restart: unless-stopped
    networks:
      - ollo-network
    depends_on:
      - nginx
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    restart: unless-stopped
    networks:
      - ollo-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

networks:
  ollo-network:
    driver: bridge

volumes:
  logs:
    driver: local
  nginx-logs:
    driver: local